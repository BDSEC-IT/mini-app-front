name: Deploy Mini App to Server

on:
  push:
    branches: [main, test]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      DEPLOY_SCRIPT: |
        set -eu
        BRANCH_NAME="${{ github.ref_name }}"
        echo "üîÑ Deploying branch: $BRANCH_NAME"
        cd /home/damdinsuren/projects/mini-app

        git fetch origin "$BRANCH_NAME"
        git checkout "$BRANCH_NAME"
        git reset --hard "origin/$BRANCH_NAME"

        if [ "$BRANCH_NAME" = "test" ]; then
          CONTAINER_NAME="mini-app-test"
          HOST_PORT="3111"
        else
          CONTAINER_NAME="mini-app"
          HOST_PORT="3110"
        fi

        echo "üßπ Stopping and removing existing container..."
        docker rm -f "$CONTAINER_NAME" >/dev/null 2>&1 || true

        echo "üßπ Cleaning up old Docker images..."
        
        # Only remove images related to this specific frontend app
        if [ "$BRANCH_NAME" = "test" ]; then
          # Remove only test branch images
          docker images | grep "mini-app-test" | awk '{print $3}' | xargs -r docker rmi -f
        else
          # Remove only main branch images  
          docker images | grep "mini-app" | grep -v "mini-app-test" | awk '{print $3}' | xargs -r docker rmi -f
        fi
        
        # Clean up dangling images (safe to remove)
        docker image prune -f
        
        # Clean up build cache for this specific image
        docker builder prune -f --filter type=exec.cachemount --filter=unused-for=24h

        echo "üê≥ Building Docker image..."
        docker build --pull -t "$CONTAINER_NAME" .

        echo "üöÄ Running new container on host port $HOST_PORT"
        docker run -d \
          --name "$CONTAINER_NAME" \
          -p "127.0.0.1:$HOST_PORT:3000" \
          --restart unless-stopped \
          "$CONTAINER_NAME"

        echo "‚úÖ Deployment complete for branch: $BRANCH_NAME"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: damdinsuren
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: ${{ env.DEPLOY_SCRIPT }}
